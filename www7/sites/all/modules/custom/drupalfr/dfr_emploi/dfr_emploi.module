<?php
/**
 * @file
 * Code for the dfr_emploi feature.
 */

include_once 'dfr_emploi.features.inc';

/**
 * Implements hook_form_alter().
 */
function dfr_emploi_form_offre_node_form_alter(&$form, &$form_state) {
  $form['scheduler_settings']['unpublish_on']['#description'] .= " La limite de publication d'une offre est fixée à 6 mois maximum.";
  $form['#validate'][] = 'dfr_emploi_unpublishing_date_validate';
}

/**
 * Validate handler to check for unpublishing date on offre
 */
function dfr_emploi_unpublishing_date_validate($form, &$form_state) {
  $unpublish_time = _scheduler_strtotime($form_state['values']['unpublish_on']);
  if ($unpublish_time > REQUEST_TIME + 3600 * 24 * 30 * 6) {
    form_set_error('unpublish_on', 'On a dit 6 mois !');
  }
}

/**
 * Implements hook_node_access().
 */
function dfr_emploi_node_access($node, $op, $account) {
  if ($op == 'update' && $node->type == 'offre' && $node->status) {
    if (!user_access('administer content', $account) && ($account->uid == $node->uid)) {
      drupal_set_message('Cette offre est publiée et ne peut plus être modifiée.');
      return NODE_ACCESS_DENY;
    }
  }

  // Returning nothing from this function would have the same effect.
  return NODE_ACCESS_IGNORE;
}

/**
 * Implements hook_url_outbound_alter().
 */
function dfr_emploi_url_outbound_alter(&$path, &$options, $original_path) {
  /*global $base_url;
  if (preg_match('|^emploi\/(.+)|', $path, $matches)) {
    $options['absolute'] = TRUE;
    $base_url = $matches[1];
    $path = str_replace('emploi/', $path, 1);
  }*/
}

/**
 * Implements hook_url_inbound_alter().
 */
function dfr_emploi_url_inbound_alter(&$path, $original_path, $path_language) {
  global $base_url;
  // On arrive sur emploi.*
  if (preg_match('|^https?:\/\/emploi\.(.+)|', $base_url)) {
    // On veut que le path interne remette emploi en front, sauf s'il y est déjà
    if (0 !== strpos($original_path, 'emploi')) {
      if (!$original_path || $original_path == variable_get('site_frontpage', 'node')) {
        $path = 'emploi/tous';
      }
      else {
        $path = 'emploi/' . $original_path;
      }
      if ($source = drupal_lookup_path('source', $path, $path_language)) {
        $path = $source;
      }
    }
  }
  elseif (0 === strpos($original_path, 'emploi') ||
    (($alias = drupal_lookup_path('alias', $path, $path_language)) &&
      0 === strpos($alias, 'emploi'))
  ) {
    // Quand on est pas sur emploi.*, on regarde si notre path interne ou son
    // alias commence par emploi, si oui, on tronque et on redirige sur emploi.*
    if (!isset($alias)) {
      $alias = drupal_lookup_path('alias', $path, $path_language);
    }
    $alias = substr($alias, strlen('emploi/'));
    list($scheme, $url) = explode('://', $base_url, 2);
    drupal_goto($alias, array('base_url' => $scheme . '://emploi.' . $url), 301);
  }
}
