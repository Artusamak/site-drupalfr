<?php

/**
 * Implements hook_install().
 */
function dfr_emploi_install() {
  // Must execute after scheduler.
  $weight = db_select('system', 's')
    ->fields('s', array('weight'))
    ->condition('name', 'scheduler', '=')
    ->execute()
    ->fetchField();

  db_update('system')
    ->fields(array('weight' => $weight + 1))
    ->condition('name', 'dfr_emploi', '=')
    ->execute();
}

/**
 * Implements hook_enable().
 */
function dfr_emploi_enable() {
  // Rebuild the feature.
  features_include(TRUE);
  $module = 'dfr_emploi';
  $feature = feature_load($module);
  $items[$module] = array_keys($feature->info['features']);
  _features_restore('enable', $items);
  _features_restore('rebuild', $items);
  drupal_static_reset();

  // Create the terms for type de contrat.
  $machine_name = 'type_contrat';
  $vocabulary = taxonomy_vocabulary_machine_name_load($machine_name);
  if (!count(taxonomy_get_tree($vocabulary->vid))) {
    $terms = array(
      'CDD',
      'CDI',
      'Freelance',
      'Stage',
      'Alternance',
    );
    foreach ($terms as $term_machine_name => $term_name) {
      $term = (object) array(
        'vid' => $vocabulary->vid,
        'vocabulary_machine_name' => $machine_name,
        'name' => $term_name,
      );
      taxonomy_term_save($term);
    }
  }

  // Create the terms for nature du poste.
  $machine_name = 'nature_poste';
  $vocabulary = taxonomy_vocabulary_machine_name_load($machine_name);
  if (!count(taxonomy_get_tree($vocabulary->vid))) {
    $terms = array(
      'Chef de projet',
      'Développeur',
      'Développeur senior',
      'Intégrateur / thémeur',
      'Exploitant',
      'Hors technique',
    );
    foreach ($terms as $term_machine_name => $term_name) {
      $term = (object) array(
        'vid' => $vocabulary->vid,
        'vocabulary_machine_name' => $machine_name,
        'name' => $term_name,
      );
      taxonomy_term_save($term);
    }
  }
}
