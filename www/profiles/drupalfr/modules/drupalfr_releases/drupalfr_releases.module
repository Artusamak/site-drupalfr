<?php

/**
 * @file
 * Contains hook implementations for drupalfr_releases module.
 */

/**
 * Implements hook_cron().
 */
function drupalfr_releases_cron() {
  /** @var \Drupal\drupalfr_releases\Service\ReleaseHelperInterface $release_helper */
  $release_helper = \Drupal::service('drupalfr_releases.release_helper');
  /** @var \Drupal\Core\Queue\QueueFactory $queue_factory */
  $queue_factory = \Drupal::service('queue');
  // Retrieve and init the queue in case it is not already created.
  $queue = $queue_factory->get('drupalfr_releases_import');
  $queue->createQueue();
  /** @var \Drupal\Core\State\StateInterface $state */
  $state = \Drupal::state();

  $last_uuid_check = $state->get('drupalfr_releases.last_uuid_check', 0);
  $current_time = \Drupal::time()->getRequestTime();

  // Check the releases every day (3600x24).
  if (($last_uuid_check + 86400) < $current_time) {
    $data = $release_helper->getFeedReleases();
    // Add items to the queue.
    foreach ($data as $result) {
      $queue->createItem([
        'data' => $result,
      ]);
    }
    $state->set('drupalfr_releases.last_uuid_check', $current_time);
  }

  // Process the import of releases.
  for ($iteration = 1; $iteration <= 10; $iteration++) {
    if ($queue_item = $queue->claimItem()) {
      $queue_item_data = $queue_item->data;
      $data = $queue_item_data['data'];

      $release_helper->importReleaseListData([$data]);

      $queue->deleteItem($queue_item);
    }
    else {
      break;
    }
  }
}
