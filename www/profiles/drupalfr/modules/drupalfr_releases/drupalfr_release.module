<?php

use  Drupal\drupalfr_release\Release;
use Drupal\node\Entity\Node;

/**
 * Implements hook_cron()
 */
function drupalfr_release_cron() {
  $release = new \Drupal\drupalfr_release\Release();
  $release->importWithCron();
}

/**
 * Implements hook_theme().
 */
function drupalfr_release_theme($existing, $type, $theme, $path) {
  return [
    'drupalfr_release_last_stable' => [
      'variables' => [],
      'template' => 'last-stable-release'
    ]
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function drupalfr_release_preprocess_drupalfr_release_last_stable(&$variables) {
  // Preprocess of drupalfr_release_last_stable theme

  // Load the last stable release and extract informations and set it in twig
  $release = new Release();
  $last_release = $release->getLastPublished();

  if (empty($last_release)) {
    return;
  }

  $release_node = Node::load(reset($last_release));

  $field_link = $release_node->get('field_release_link')->getValue();
  $field_major = $release_node->get('field_release_version_major')->getValue();
  $field_minor = $release_node->get('field_release_version_minor')->getValue();
  $field_patch = $release_node->get('field_release_version_patch')->getValue();

  $variables['link_release'] = $field_link[0]['uri'];
  $variables['version_release'] = implode('.', [
    $field_major[0]['value'],
    $field_minor[0]['value'],
    $field_patch[0]['value']
  ]);
}